#!/usr/bin/env bash
# In some of the Wellcome Terraform projects, we invoke Terraform via
# a wrapper script.  This fetches extra credentials from Secrets Manager,
# e.g. our Auth0 API tokens, and passes them to Terraform as env vars.
#
# This is one of three scripts (`tfi`, `tfp`, `tfa`) which do the
# boring work of checking whether a project uses a wrapper script, or
# whether to invoke Terraform directly.
#
# This is an alias for "terraform apply".

# Handle refresh-only changes.
#
# If Terraform doesn't want to make any changes, it will give you
# a message:
#
#     Your configuration already matches the changes detected above.
#     If you'd like to update the Terraform state to match, create and
#     apply a refresh-only plan:
#       terraform apply -refresh-only
#
# At this point it's tempting to run `tfa -refresh-only`, but that needs
# to be handled separately.  If you pass it through the branch below,
# you get an error:
#
#     Error: Too many command line arguments
#     Expected at most one positional argument.
#
# because under the hood it's running:
#
#     terraform apply terraform.plan -refresh-only
#
# which doesn't make any sense!
#
if [[ "$@" == "-refresh-only" ]]
then
  if [[ -f run_terraform.sh ]]
  then
    ./run_terraform.sh apply -refresh-only
  else
    terraform apply -refresh-only
  fi

# All other Terraform operations
else
  if [[ -f run_terraform.sh ]]
  then
    ./run_terraform.sh apply terraform.plan "$@"
  else
    terraform apply terraform.plan "$@"
  fi
fi
