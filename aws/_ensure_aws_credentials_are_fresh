#!/usr/bin/env bash
# To get AWS credentials, I use aws-azure-login, which use Azure SSO
# to get temporary credentials.
# See https://github.com/wellcomecollection/platform-infrastructure/blob/main/accounts/docs/cli-credentials.md
#
# This script runs in front of a couple of wrappers that require AWS access
# (e.g. tfi, tfp) to ensure that I have fresh credentials, which saves me
# trying something which will obviously fail, refreshing creds, then trying
# a second time. Everything goes a little smoother!

set -o errexit
set -o nounset

function get_aws_credentials_expiry_timestamp() {
  timestamp=$(
    grep aws_expiration ~/.aws/credentials \
      | tr '=' ' ' \
      | awk '{print $2}'
  )

  unix_timestamp=$(python3 -c "
from datetime import *
d = datetime.strptime('$timestamp', '%Y-%m-%dT%H:%M:%S.%fZ')
print(int(d.timestamp()))
  ")

  echo "$unix_timestamp"
}

EXPIRY_TIMESTAMP=$(get_aws_credentials_expiry_timestamp)
CURRENT_TIMESTAMP=$(date +%s)

if (( CURRENT_TIMESTAMP - 100 >= EXPIRY_TIMESTAMP ))
then
  echo "AWS credentials have expired, auto-refreshing..."
  AWS_PROFILE="" aws-azure-login --no-prompt
fi
