#!/usr/bin/env osascript -l JavaScript
// A script to close ephemeral Safari tabs.
//
// This is a script I run at the end of each working day, to close
// Safari tabs I've opened that can be safely closed.
//
// See https://alexwlchan.net/2022/safari-tabs/

safari = Application("Safari");

// Generates all the window/tab/URLs in Safari.
//
// This runs in reverse window/tab index order: that is, windows are returned
// bottom to top, and tabs from right to left.
function* tabGenerator() {
  window_count = safari.windows.length;

  for (window_index = window_count - 1; window_index >= 0; window_index--) {
    window = safari.windows[window_index];

    tab_count = window.tabs.length;

    for (tab_index = tab_count - 1; tab_index >= 0; tab_index--) {
      tab = window.tabs[tab_index];

      yield [window_index, tab_index, tab.url()];
    }
  }
}

function isSafeToClose(url) {

  // Sometimes we get a `null` as the URL of a tab; I'm not sure why,
  // so leave this tab open.
  if (url === null) { return false; }

  return (
    url.startsWith("https://chat.openai.com/c/") ||
    url.startsWith("http://localhost:3000/") ||
    url.startsWith("http://localhost:5000/") ||
    url.startsWith("http://localhost:5757/") ||
    url.startsWith("http://localhost:5959/") ||
    url.startsWith("https://analytics.alexwlchan.net") ||
    url.startsWith("https://app.fastmail.com/mail/Inbox/?u=") ||
    url.startsWith("https://chat.openai.com/c/") ||
    url.startsWith("https://discord.com/") ||
    url.startsWith("https://github.com/Flickr-Foundation/") ||
    url.startsWith("https://lexies-library-lookup.netlify.app/") ||
    url.startsWith("https://zoom.us/")
  ) || (
    url === 'https://alexwlchan.net/' ||
    url === 'https://arstechnica.com/' ||
    url === 'https://calendar.google.com/calendar/u/0/r/week' ||
    url === 'https://chat.openai.com/' ||
    url === 'https://commons.flickr.org/' ||
    url === 'https://daringfireball.net/' ||
    url === 'https://docs.google.com/document/u/0/' ||
    url === 'https://github.com/' ||
    url === 'https://github.com/alexwlchan/books.alexwlchan.net' ||
    url === 'https://github.com/alexwlchan/scripts' ||
    url === 'https://lexies-library-lookup.netlify.app/' ||
    url === 'https://mail.google.com/mail/u/0/#inbox' ||
    url === 'https://mail.google.com/mail/u/1/#inbox' ||
    url === 'https://mobile.twitter.com/home' ||
    url === 'https://news.ycombinator.com/' ||
    url === 'https://old.reddit.com/' ||
    url === 'https://remote.com' ||
    url === 'https://social.alexwlchan.net/home' ||
    url === 'https://social.alexwlchan.net/notifications' ||
    url === 'https://twitter.com/home' ||
    url === 'https://twitter.com/i/timeline' ||
    url === 'https://twitter.com/notifications' ||
    url === 'https://www.facebook.com/' ||
    url === 'https://www.macrumors.com' ||
    url === 'https://www.macrumors.com/' ||
    url === 'https://www.operationmincemeat.com' ||
    url === 'https://www.theguardian.com/uk' ||
    url === 'https://www.youtube.com/' ||
    url === 'https://www.youtube.com/?app=desktop' ||
    url === 'https://x.com/home' ||
    url === 'history://'
  );
}

let closedCount = 0;

var alreadySeenUrls = new Set();

// We can close a tab if:
//
//  - it's safe to close, or
//  - the URL in this tab is open in another tab, so it's a dupe
//
for (const [window_index, tab_index, url] of tabGenerator()) {
  if (isSafeToClose(url)) {
    console.log(url);
    safari.windows[window_index].tabs[tab_index].close();
    closedCount += 1;
  } else if (alreadySeenUrls.has(url)) {
    console.log(`${url} (open in another tab)`);
    safari.windows[window_index].tabs[tab_index].close();
    closedCount += 1;
  } else {
    alreadySeenUrls.add(url);
  }
}

const remainingCount = alreadySeenUrls.size;

console.log(`Closed ${closedCount} tab${closedCount !== 1 ? 's' : ''}; ${remainingCount} tab${remainingCount !== 1 ? 's' : ''} left open`)
