#!/usr/bin/env python3
"""
This script walks a directory tree, looks for empty directories,
and removes them.

It prints the name of every directory it removes.
"""

import os
import shutil

import humanize
import termcolor


def can_be_deleted(d):
    # This is a folder where I put files that I explicitly don't
    # want to put in backups.  See https://overcast.fm/+R7DX9_W-Y/21:22
    # or my Obsidian note about the same.
    if os.path.abspath(d) == "/Users/alexwlchan/Desktop/do not back up":
        return False

    entries = os.listdir(d)
    return entries == [".DS_Store"] or not entries


def delete_directory(d):
    assert can_be_deleted(d)
    print(d)
    shutil.rmtree(d)

    # Was this the only entry in its parent directory?  Unwind one level
    # to see if we can delete the parent also.
    parent = os.path.dirname(d)
    if can_be_deleted(parent):
        delete_directory(parent)


if __name__ == "__main__":
    total_deleted = 0

    for d, _, _ in os.walk("."):
        if can_be_deleted(d):
            delete_directory(d)
            total_deleted += 1

    if total_deleted == 1:
        print(termcolor.colored(f"1 directory deleted", "green"))
    elif total_deleted > 0:
        print(
            termcolor.colored(
                f"{humanize.intcomma(total_deleted)} directories deleted", "green"
            )
        )
